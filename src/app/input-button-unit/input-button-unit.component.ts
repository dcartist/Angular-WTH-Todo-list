// import { Component, OnInit } from '@angular/core';
import { Component, OnInit, Output, EventEmitter} from '@angular/core';


@Component({
  selector: 'app-input-button-unit',
  //Make sure to have backticks for this template
  template: `
  <input #inputElementRef
  [value]="title"
  (keyup.enter)="submitValue($event.target.value)">

<button (click)="submitValue(inputElementRef.value)">
Save WTF
</button>
  `,
  styleUrls: ['./input-button-unit.component.css']

})
export class InputButtonUnitComponent implements OnInit {
  @Output() submit: EventEmitter<string> = new EventEmitter();
  title = 'Hello World, BAD ASS';
  constructor() {
    this.title = 'I Love Angular, actually I love programming.';
//Methods are outside of constructor still
  }

  // changeTitle(inputElementReference) {
  //   console.log(inputElementReference);
  //   this.title = inputElementReference.value;
  // }

  changeTitle(newTitle: string) {
    this.submit.emit(newTitle);
  }

  submitValue(newTitle: string) {
    this.submit.emit(newTitle);
  }



//binding information in another way
  generateTitle(): string {
    return 'This title was generated by a method.';
  }

  ngOnInit() {
    //sets a time out for the change of info
    setTimeout(() => {
      this.title = 'This is not the title you are looking for';
    }, 3000);

    // Methods >> this.changeTitle is implemented here from building in the constructor earlier

  }

}
